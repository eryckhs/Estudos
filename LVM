-----------------------------------------------------------------------------------------------------------------------------------------------
Estudo:
    
    LVM - Logical Volume Manager
    
    O lvm é um intermediador entre as suas unidades de armazenamento físicas (hds, ssds) e o armazenamento lógico. O lvm faz a associação entre 
    dispositivos/partições físicas e dispositivos lógicos.
    
    o lvm atua como um gerenciador de espaço lógico, habilitando escalabilidade de espaço interno a partir dos volumes lógicos.
    
    como funciona: o lvm junta todo o armazenamento físico (Physical Volume) disponível dentro de um Volume Group (VG) e dentro desse volume grupo você é capaz
    de criar partições lógicas, ou Logical Volume (LV).
    
    
    Aplicar LVM na instalação inicial do linux: https://www.youtube.com/watch?v=MeltFN-bXrQ&ab_channel=LearnLinuxTV
    
    Na tela de particionamento de discos, vá em 'manual', depois em 'configure the Logical Volume Manager' para abrir a tela de particionamento manual da lvm.
    Crie um novo Volume group e selecione o espaço físico (Physical Volume) disponível. 
    Agora podemos criar um Logical Volume e para isso nós devemos selecionar o Volume Group desejado. 
    Após nomear o Logical Volume coloque o tamanho desejado e finalize.
    De volta na tela de particionamento nós temos o Logical Volume disponível para configuração, acesse ele e defina como ela será usada (ext4), ig. formatar como um 
    Sistema de arquivos (fs), depois selecione o Mount Point. Pronto.
    
    
    ATENÃO NOS SEGUINTES COMANDOS: como todos mexem com o armazenamento alguns comandos podem apagar o seu HD inteiro, fica ligado pra n errar.
    
    pvcreate [device] ; cria um novo Physical Volume, converte o novo armazenamento INTEIRAMENTE em lvm, mas n atribui nenhum Volume Group a ele.
    vgcreate [nome] [device] ; Cria um novo Volume Group a partir de um device em lvm novo.
    lvcreate [nome do Volume Group] -L [tamanho] -n [nome]
    
    vgextend [volume group][device] ; este comando irá extender o Volume Group com o novo Physical Volume criado, vai adicionar ele ao grupo. mas não significa que 
    será atribuido um Logical Volume a ele. O comando vgextend apenas disponibiliza mais espaço para a lvm. Free Space
    lvextend -r(resize2fs) -L(size) +10G [device] ; esse comando irá exetender o tamanho do Logical Volume por 10G e irá ajustar o file system para o novo tamanho (-r). Podemos usar
    o mesmo comando mas com -l minusculo e depois a porcentagem do espaço livre que eu quero adicionar ao meu Logical Volume (lvextend -r -l +100%FREE [device]).

    vgdisplay ; mostra todos os dados dos Volume Group presentes na sua máquina, assim como o espaço livre.
    lvdisplay ; mostra todos os dados dos Logical Volumes presentes na sua máquina, assim como podemos ver o local onde está localizado dentro de /dev.
    
    lvreduce -L-1G [device] ; reduz o tamanho de um Logical Volume, mas atenção você deve antes diminuir o tamanho do file system presente.
        diminuir o FS:
            ext2/3/4 - resize2fs /dev/lvmdisk/tmp 4G e depois lvreduce -L-1G /dev/lvmdisk/tmp
            reiserfs - resize_reiserfs -s-1G /dev/lvmdisk/tmp e depois lvreduce -L-1G /dev/lvmdisk/tmp
    
    vgs / lvs / pvs - mostra informaçoes em formato simples
    
    note que o diretório /dev para lvm é diferente. os Logical Volumes são descritos como /dev/[volume-group]/[Logical-volume]
    
    para formatar manualmente um novo Logical Volume, use o comando 'mkfs.ext4 [device]' ou outro modo de formatação que preferir.
    
    Proximo passo é montar este Logical Volume, mas antes é aconselhavel que um novo diretório seja criado, para isso use 'mkdir -p /mnt/extra/logs' e monte usando
    'mount [device] /mnt/extra/logs'. Use df -h para confirmar se ele está corretamente montado.
    
    Para que o novo Logical Volume seja montado toda vez que o sistema for iniciado nós precisamos adicionar algumas linhas ao arquivo /etc/fstab. faça um backup antes!
    edite o arquivo /etc/fstab e adicione a seguinte linha 'UUID = <Block ID for Logical Volume>'   /mnt/extra/logs         ext4            defaults        0       2
                                                            Use blkid para pegar o UUID          Local onde será montado    Formatação      Opções          dump       Prioridade            
    
    Para verificar se o arquivo /etc/fstab está funcionando corretamente utilize: 'mount -a', ele irá montar todos os volumes presentes no arquivo de configuração.
    
    Lista de comandos: https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-disk-storage-lvm.html

-----------------------------------------------------------------------------------------------------------------------------------------------
Por que separar /var, /tmp, /home em partições diferentes:

    é aconselhavel dividir os diretórios /tmp, /var, /home pois eles estão em direto contato com o usuário, 
    então qualquer problema que um usuário cause não afetará o sistema como um todo. Outro motivo é que os diretório
    /var pode ficar cheio de logs e ocupar muito espaço interno, onde em uma partição é possivel expandir esse espaço 
    enquanto uma unica patição com todos os diretórios não, assim evitando que o '/' fique cheio e comprometendo o sistema.

-----------------------------------------------------------------------------------------------------------------------------------------------    
/home:
    
    Primeiro precisamos identificar o Volume Group que será usado para alocar o Logical Volume que irá conter o diretório /home
     
    # lsblk - para listar a árvore de dispositivos
    
    com o Volume Group identificado podemos dar sequencia na criação do Logical Volume
    
    # sudo lvcreate vg1 -L 8G -n lv2
    
    após criado, devemos formata-lo com um FS, usando o mkfs.
    
    # sudo mkfs.ext4 /dev/vg1/lv2
    
    com o Lv formatado devemos montar o dispositivo em algum diretório para copiar o conteúdo de /home. ao copiar o conteúdo 
    do /home para o diretório onde o nosso disṕsitivo está ele irá armazenar a cópia dentro dele, mantendo os dados existentes.
    
    # sudo mkdir /mnt/temp
    # sudo mount /dev/vg1/lv2 /mnt/temp
    # sudo cp -aR /home/* /mnt/temp ; as opção -aR indica que tudo dentro de /home será copiado e preservado.
    
    com o /home copiado detro de /mnt/temp podemos renomear o /home para evitar conflito quando criarmos o novo /home limpo, 
    que será usado para montar o logical volume.
    
    # sudo mv /home /home-orig
    # sudo mkdir /home
    # sudo umount /dev/vg1/lv2
    # sudo mount /dev/vg1/lv2 /home
    
    está configuração irá desaparecer uma vez que o sisema é reiniciado, para evitar isso devemos editar o arquivo /etc/fstab para que
    esse dispositivo seja montado junto com a inicialização do sistema.
    para editar este arquivo precisamos saber o UUID do dispositivo e inserir ele no arquivo, portanto siga os passos como 'root':
    
    # su
    # sudo blkid /dev/vg1/lv2 >> /etc/fstab
    # nano /etc/fstab
    insira a linha: UUID:<resultado do comando blkid> /home etx4 defaults 0 2
    
    para conferir se o arquivo está configurado corretamente desmonte o dispositivo que está em /home e depois execute o comando mount -a.
    esse comando irá acessar o arquivo /etc/fstab e montar todos os dispositivos dentro dele.
    
    # umount /dev/vg1/lv2
    # mount -a
    # lsblk
    
    se estiver tudo correto você pode excluir o diretório /home-orig.
    
    # sudo rm -r /home-orig
    
    finalizado :3

-----------------------------------------------------------------------------------------------------------------------------------------------   
/var e /tmp:
    
    Primeiro precisamos identificar o Volume Group que será usado para alocar o Logical Volume que irá conter o diretório /home
     
    # lsblk - para listar a árvore de dispositivos
    
    com o Volume Group identificado podemos dar sequencia na criação do Logical Volume
    
    # sudo lvcreate vg1 -L 1G -n lv3 -- /tmp
    # sudo lvcreate vg1 -L 3G -n lv4 -- /var
    
    após criado, devemos formata-lo com um FS, usando o mkfs.
    
    # sudo mkfs.ext4 /dev/vg1/lv3
    # sudo mkfs.ext4 /dev/vg1/lv4
    
    com o Lv formatado devemos montar o dispositivo em algum diretório para copiar o conteúdo de /var e /temp. ao copiar o conteúdo 
    para o diretório onde o nosso dispositivo está montado, ele irá armazenar a cópia dentro dele, mantendo os dados existentes.
    
    # sudo mkdir /mnt/temp-tmp
    # sudo mkdir /mnt/temp-var
    # sudo mount /dev/vg1/lv3 /mnt/temp-tmp
    # sudo mount /dev/vg1/lv4 /mnt/temp-var
    # sudo cp -aR /tmp/* /mnt/temp-tmp
    # sudo cp -aR /var/* /mnt/temp-var 
    
    com o /tmp e /var copiados detro de /mnt/temp-tmp e /mnt/temp-var, respectivamente, podemos renomear os diretórios originais 
    para evitar conflito quando criarmos o novos diretórios limpoo,  que seram usados para montar os logical volume.
    
    # sudo mv /tmp /tmp-orig
    # sudo mv /var /var-orig
    # sudo mkdir /tmp
    # sudo mkdir /var
    # sudo umount /dev/vg1/lv3
    # sudo umount /dev/vg1/lv4
    # sudo mount /dev/vg1/lv3 /tmp
    # sudo mount /dev/vg1/lv4 /var
    
    está configuração irá desaparecer uma vez que o sisema é reiniciado, para evitar isso devemos editar o arquivo /etc/fstab para que
    esse dispositivo seja montado junto com a inicialização do sistema.
    para editar este arquivo precisamos saber o UUID do dispositivo e inserir ele no arquivo, portanto siga os passos como 'root':
    
    # su
    # sudo blkid /dev/vg1/lv3 >> /etc/fstab
    # nano /etc/fstab
    insira a linha: UUID:<resultado do comando blkid> /tmp etx4 defaults 0 2
    
    # sudo blkid /dev/vg1/lv4 >> /etc/fstab
    # nano /etc/fstab
    insira a linha: UUID:<resultado do comando blkid> /var etx4 defaults 0 2
    
    para conferir se o arquivo está configurado corretamente desmonte o dispositivo que está em /home e depois execute o comando mount -a.
    esse comando irá acessar o arquivo /etc/fstab e montar todos os dispositivos dentro dele.
    
    # umount /dev/vg1/lv3
    # umount /dev/vg1/lv4
    # mount -a
    # lsblk
    
    se estiver tudo correto você pode excluir os diretórios /tmp-orig e /var-orig.
    
    # sudo rm -r /tmp-orig
    # sudo rm -r /var-orig
    
    finalizado :3
    
-----------------------------------------------------------------------------------------------------------------------------------------------   
Snapshot:
    
    As snapshots do LVM são baseados em Copy-on-Write que monitora mudanças nos volumes para que, quando um Write ocorre em algum dos blocos,
    o valor do bloco na snapshot é copiado para um volume de snapshot. desta forma uma cópia em um ponto no tempo de dados é preservada enquanto
    a snapshot não for deletada.
    uma snapshot contém dados sobre si mesmo e blocos de dados do volume fonte que mudou desde o momento em que a snapshot foi feita. quando
    ela é acessada os dados são uma cópia do volume fonte. como a tecnologia usada é  o Copy-on-write esse sistema detecta toda vez que uma 
    mudança foi feita no bloco de dados original. ele copia o valor que tinha quando a snapshot foi feita em um bloco dentro do volume de snapshot.
    quanto mais mudanças forem feitas, maior será o tamanho do volume de snapshot.
    O volume de snapshot não pode ser expandido, portanto tenha certeza do tamanho que ela será criada para garantir que todas as mudanças sejam
    registradas.
    
    para criar uma snapshot use o seguinte comando:
    
    # sudo lvcreate -s -L <size> -n <nome> <caminho do volume fonte>
    
    ig. # sudo lvcreate -s -L 1G -n linux01-snap /dev/lvm/linux01
          a snapshot foi criada como um volume em /dev/lvm/linux01-snap
    
    A partir da sua criação ela pode ser tratada como um volume normal, sendo possivel monitorar ela (lvdisplay) e remover (lvremove)
    
    para retornar um volume ao seu estado anterior ou misturar uma snapshot com o volume fonte use o seguinte comando:
    é necessário desmontar o sistema fonte antes de iniciar a restauração!
    
    # sudo lvconvert --merge [caminho do volume-snap]
    
    dependendo do estado (ativo, rodando) dos seus volumes o merge ocorre em momentos diferentes:
    º If both the source logical volume and snapshot volume are not open, the merge begins immediately.
    º If the source logical volume or snapshot volume are open, the merge starts the first time either the source logical volume or 
      snapshot volume are activated and both are closed.
    º If the source logical volume cannot be closed, such as the root file system, the merge is deferred until the next time the 
      server reboots and the source logical volume is activated.
    
    o merge pode ocorrer no background (opção -b), possibilitando o uso do sistema enquando o merge ocorre. todas as mudanças feitas são 
    apliadas no volume fonte que está sendo modificado.
    
    é possivel aumentar o tamanho das snapshots automaticamente, basta editar o arquivo /etc/lvm/lvm.conf. dentro dele procure pela palavra 'autoextend'.
    por padrão são 2 linhas com snapshot_autoextend, uma com threshold e outra com percent. isso que dizer que quando atingir o threshold ele será expandido
    pela porcentagem. mude o valor do threshold 100 para 75, assim quando o volume de snapshot chegar em 75% da sua capacidade maxima, ele será expandido por
    20%.
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
